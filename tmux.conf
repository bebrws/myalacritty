# Brad Barrows
# tmux config
# Belongs at ~/.tmux.conf
# Remember to install tmux plugin manager tpm
#
unbind C-b
set -g prefix C-b
bind C-b send-prefix

bind -n DoubleClick1Pane { 
   setw -g word-separators ' @"=()[]:'
   run-shell -t 0 "tmha #{mouse_word}"
}

bind -n C-DoubleClick1Pane { 
   setw -g word-separators ' @"=()[]:'
   run-shell -t 0 "tmhac #{mouse_word}"
}


bind -n M-DoubleClick1Pane { 
   setw -g word-separators ' @"=()[]:'
run-shell -t 0 "echo \"#{mouse_word}\" | pbcopy"
}


# Prevent Tmux from jumping back to the prompt on drag end
unbind -T copy-mode-vi MouseDragEnd1Pane

# Control b control k will clear history
bind -n C-k clear-history;
# bind -n C-h clear-history

bind c new-window -c "#{pane_current_path}"

# Jump to the previous occurence of a string this way I can jump to the previous prompt using the > character
bind-key b copy-mode\;\
           send-keys -X start-of-line\;\
           send-keys -X search-backward "❯"

unbind C-l
# Jump to previous error line
bind -n C-l copy-mode\;\
           send-keys -X start-of-line\;\
           send-keys -X search-backward "error"                  

# setw -g word-separators ' @"=()[]:,.'
# bind -n C-DoubleClick1Pane { 
#    setw -g word-separators ' @"=()[]:'
#    display-menu -y20 -x50 'package.json' 'C-r' 'run-shell -t 0 "/usr/local/bin/tmha #{mouse_word}"' 
# }

# set-option -g default-shell /opt/zsh/bin/zsh
# set-option -g default-shell /usr/local/bin/zsh
set-option -g default-shell /bin/zsh

bind-key r source-file ~/.tmux.conf \; display-message "tmux.conf reloaded"

# Control b - then c will create a new window
# Shift left and right will go back and forth between windows
# So will clicking on tabs with the mouse
bind -n S-Left previous-window
bind -n S-Right next-window

# control b control r will re spawn the tmux pane
bind -n M-C-r respawn-pane -k
# control b x will kill a pane

bind -n S-Up swap-window -t -1
bind -n S-Down swap-window -t +1

bind-key n previous-window
bind-key p next-window

bind-key 0 select-window -t 0
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9

# control b - v/f will split the current window veritically then horizontally
bind-key v split-window -h -c '#{pane_current_path}'
bind-key f split-window -v -c '#{pane_current_path}'

# Start window counts at 1
set -g base-index 1
setw -g pane-base-index 1
# re-number windows when one is closed
set -g renumber-windows on

# word separators for automatic word selection
setw -g word-separators ' @"=()[]_-:,.'
setw -ag word-separators "'"

# Show times longer than supposed
set -g display-panes-time 2000

# tmux messages are displayed for 4 seconds
set -g display-time 4000

# {n}vim compability
set -g default-terminal "screen-256color"


# Just use Control B - Arrow key to switch pane
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R

# Search through tmux hsitory with Control B /
bind-key / copy-mode \; send-key ?


# Resize panes
# bind-key j resize-pane -D 10
# bind-key k resize-pane -U 10
# bind-key h resize-pane -L 10
# bind-key l resize-pane -R 10

# Select panes 
# bind-key j select-pane -D 
# bind-key k select-pane -U 
# bind-key h select-pane -L 
# bind-key l select-pane -R 



# Use vim keybindings in copy mode
setw -g mode-keys vi

# Update default binding of `Enter` and `Space to also use copy-pipe
unbind -T copy-mode-vi Enter
unbind -T copy-mode-vi Space

bind-key -T edit-mode-vi Up send-keys -X history-up
bind-key -T edit-mode-vi Down send-keys -X history-down

### Copy without jumping back to the prompt!
# setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-selection\; run "tmux save -|pbcopy >/dev/null 2>&1"

# emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
set -g status-keys emacs

# focus events enabled for terminals that support them
set -g focus-events on

# Sync panes (Send input to all panes in the window). When enabled, pane
# borders become red as an indication.
bind C-s if -F '#{pane_synchronized}' \
                     'setw synchronize-panes off; \
                      setw pane-active-border-style fg=colour63,bg=default; \
                      setw pane-border-format       " #P "' \
                   'setw synchronize-panes on; \
                    setw pane-active-border-style fg=red; \
                    setw pane-border-format       " #P - Pane Synchronization ON "'

# Faster command sequence
set -s escape-time 0

# Have a very large history
set -g history-limit 1000000

# Mouse mode on
set -g terminal-overrides 'xterm*:smcup@:rmcup@'
set -g mouse on

# Set title
set -g set-titles on
set -g set-titles-string "#T"

# Disable confirm before killing
bind-key x kill-pane

# This tmux statusbar config was created by tmuxline.vim
# on Wed, 25 Nov 2015
set -g status "on"
set -g status-bg "colour236" 
set -g status-justify "left"
set -g status-position "top"
set -g status-left-length "100"
set -g status-right-length "100"
set -g status-left "          #{prefix_highlight}#[fg=colour22,bg=colour148,bold] #S #[fg=colour148,bg=colour236,nobold,nounderscore,noitalics]"

# Git status bar right now shows:
# DATE_TIME REPO_NAME BRANCH_NAME NUMBER_OF_MODIFIED_FILES NUMBER_OF_UNTRACKED_FILED HOSTNAME
# This is the one I Made with the number of untracked files and all:
#set -g status-right "#[fg=colour240,bg=colour236,nobold,nounderscore,noitalics]#[fg=colour250,bg=colour240] %Y-%m-%d %H:%M #[fg=colour252,bg=colour240,nobold,nounderscore,noitalics] #[fg=colour228,bg=colour238] #(cd #{pane_current_path}; basename `git rev-parse --show-toplevel`) #[fg=colour223,bg=colour238] #(cd #{pane_current_path}; git rev-parse --abbrev-ref HEAD | cut -c1-25) #[fg=colour250,bg=colour236] #[fg=colour220,bg=colour238] #(cd #{pane_current_path}; git status -s -uno | wc -l | sed 's/[ ]*//' )  #[fg=colour221,bg=colour238] #(cd #{pane_current_path};git ls-files --others --exclude-standard | wc -l | sed 's/[ ]*//'  )  #[fg=colour241,bg=colour252] #h"

# This is without all that: - just the branch name and repo name / folder name
set -g status-right "#[fg=colour240,bg=colour236,nobold,nounderscore,noitalics]#[fg=colour250,bg=colour240] %Y-%m-%d %H:%M #[fg=colour252,bg=colour240,nobold,nounderscore,noitalics] #[fg=colour228,bg=colour238] #(cd #{pane_current_path}; basename `git rev-parse --show-toplevel`) #[fg=colour223,bg=colour238] #(cd #{pane_current_path}; git rev-parse --abbrev-ref HEAD | cut -c1-25) #[fg=colour250,bg=colour236]   #h"


setw -g window-status-separator ""
setw -g window-status-format " #[fg=colour245,bg=colour236] #I #[fg=colour245,bg=colour236]#W "
setw -g window-status-current-format "#[fg=colour236,bg=colour240,nobold,nounderscore,noitalics]#[fg=colour231,bg=colour240] #I #[fg=colour231,bg=colour240]#{?window_zoomed_flag,#[fg=green][],}#W #[fg=colour240,bg=colour236,nobold,nounderscore,noitalics]"

# List of plugins
# see this https://github.com/tmux-plugins/tpm to installation
# https://github.com/tmux-plugins/tpm
#
# mkdir -p ~/.tmux/plugins
# git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
#
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-open'
# set -g @plugin 'tmux-plugins/tmux-yank'
# set -g @plugin 'tmux-plugins/tmux-prefix-highlight'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'


run-shell /Users/bbarrows/repos/tmux-thumbs/tmux-thumbs.tmux
set -g @thumbs-command 'echo -n {} | pbcopy'

